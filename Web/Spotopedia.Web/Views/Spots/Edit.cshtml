@using Spotopedia.Data.Models.Enumerations
@model Spotopedia.Web.ViewModels.Spots.EditSpotInputModel
@{
    ViewData["Title"] = "Edit spot";
}

<h1>@ViewData["Title"]</h1>

<form method="post" id="editForm">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
   <div>   
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <label asp-for="Type" class="input-group-text">
                    <i class="fas fa-chevron-up"></i>
                </label>
            </div>
            <select asp-for="Type" class="form-control">
                <option selected disabled>Choose the type of the spot</option>
                @foreach (int spotType in Enum.GetValues(typeof(SpotType)))
                {
                    <option value="@spotType">@Enum.GetName(typeof(SpotType), spotType)</option>
                }
            </select>
        </div>
        <span asp-validation-for="Type" class="text-danger"></span>
    </div>
   <div>   
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <label asp-for="KickOutLevel" class="input-group-text">
                    <i class="fas fa-chevron-up"></i>
                </label>
            </div>
            <select asp-for="KickOutLevel" class="form-control">
                <option selected disabled>Choose the type of the spot</option>
                @foreach (int kickOutLevel in Enum.GetValues(typeof(SpotType)))
                {
                    <option value="@kickOutLevel">@Enum.GetName(typeof(KickOutLevel), kickOutLevel)</option>
                }
            </select>
        </div>
        <span asp-validation-for="KickOutLevel" class="text-danger"></span>
    </div>
    <p></p>
    <div>    
 <fieldset class="gllpLatlonPicker">
     <label>Location</label>
    <input type="text" class="gllpSearchField" >
    <input type="button" class="gllpSearchButton" value="search">
	<div class="gllpMap">Google Maps</div>
    <input asp-for="Address.AddressName" type="hidden" class="gllpLocationName" value="@Model.Address.AddressName"/>
	<input asp-for="Address.Latitude"   type="hidden" class="gllpLatitude" value="@Model.Address.Latitude"/>
	<input asp-for="Address.Longitude"  type="hidden" class="gllpLongitude" value="@Model.Address.Longitude"/>
	<input type="hidden" class="gllpZoom" value="15"/>
  </fieldset>
</div>
    <hr />
    <input type="hidden" asp-for="Id" />
</form>

<button type="submit" class="btn btn-success" data-toggle="modal" data-target="#modalEdit">Save changes</button>



<!-- Modal -->
<div class="modal" id="modalEdit" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Do you confirm this changes?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="editForm.submit()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    var subCategoryIndex = 1;
    function AddSubCategory() {
        $(".row").
            append("<div class='image mb-2' id='preview-picture" + subCategoryIndex + "' >" +
                "<label for='image" + subCategoryIndex + "' class='image-upload'></label>" +
                "<input type='file' id='image" + subCategoryIndex + "' class='image-upload' name='Images'/>" +
                "</div>");
        subCategoryIndex++;
    }
</script>

<script>
    $(document).on('change', ".image-upload", function () {
        let id = $(this).parent().attr('id');
        console.log(id);
        console.log(1);
        var files = !!this.files ? this.files : [];
        if (!files.length || !window.FileReader) return;
        if (/^image/.test(files[0].type)) {
            var ReaderObj = new FileReader();
            ReaderObj.readAsDataURL(files[0]);
            ReaderObj.onloadend = function () {
                $("#" + id).css("background-image", "url(" + this.result + ")");
            }
        } else {
            alert("Upload an image");
        }
    });
</script>