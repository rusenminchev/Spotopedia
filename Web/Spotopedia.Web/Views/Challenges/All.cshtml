@using Spotopedia.Common
@model Spotopedia.Web.ViewModels.Challenges.AllChallengesViewModel


<style>

    .card {
        box-shadow: 0 2px 7px #dfdfdf;
        border-radius: 7px;
    }

    .card-img-top {
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }

    .wrapper {
        display: flex;
    }

        .wrapper > div:first-child {
            margin-right: 10px;
        }

        @*Delete Modal*@

    button.btn-primary {
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -50px;
        margin-left: -100px;
    }

    .hide {
        display: none;
    }

    .show {
        display: block;
    }
</style>

<section class="inner_page_head">
    <div class="container_fuild">
        <div class="row">
            <div class="col-md-12">
                <div class="full">
                    <h3>Challenges</h3>
                </div>
            </div>
        </div>
    </div>
</section>
<br>

<div class="col-md-6 offset-md-3">
    @if (this.TempData.ContainsKey("AddNewEntry"))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @this.TempData["AddNewEntry"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (this.TempData.ContainsKey("DeleteEntry"))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @this.TempData["DeleteEntry"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }


    @if (this.TempData.ContainsKey("AccessDenied"))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @this.TempData["AccessDenied"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }


    @if (this.TempData.ContainsKey("EditChallenge"))
    {
        <div class="alert alert-primary alert-dismissible fade show" role="alert">
            @this.TempData["EditChallenge"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (this.TempData.ContainsKey("DeleteChallenge"))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @this.TempData["DeleteChallenge"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

</div>

<div class="col-md-6 offset-md-3">

    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        <div class="text-muted small ml-3"> <a type="button" asp-controller="Challenges" asp-action="Create" class="btn btn-outline-primary float-right"><i class="fa fa-plus"></i>&nbsp; Create New Challenge</a> </div>
        <div class="clearfix"></div>
        <br>
    }

    @foreach (var challenge in Model.Challenges)
    {
        <div class="card mb-3">
            <img src="@challenge.Image.ImageUrl" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title"><a asp-action="Details" asp-route-id="@challenge.Id">@challenge.Name</a></h5>
                <p class="card-text">Challenge ends: @challenge.EndDate</p>
                @if (challenge.IsItActive)
                {
                    <span class="badge badge-pill badge-success">Active</span>
                }
                else
                {
                    <span class="badge badge-pill badge-danger">Expired</span>
                }
                <hr>
                <p class="card-text">@challenge.ShortDescription</p>
            </div>
        </div>
    }
</div>

@section Scripts{
    <script>
        $('.dropdown').hover(function () {
            $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeIn(500);
        }, function () {
            $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeOut(500);
        });
    </script>

    <script>
        function confirmDelete() {
            console.log("Deleting...");
            $('.modal-header, .modal-footer, .modal-body').addClass('hide');
            $('.confirm-delete').removeClass('hide');
            //$('#myModal').modal('hide');
        }

        function openModal() {
            $('.confirm-delete').addClass('hide');
            $('#myModal .modal-header, .modal-footer, .modal-body').removeClass('hide');
            $('#myModal').modal('show');
        }
    </script>
}